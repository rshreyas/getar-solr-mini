morphlines: [
	{
		id: getar-cs5607f17-solr
		#importCommands: ["org.kitesdk.morphline.**", "com.ngdata.**", "com.cloudera.cdk.morphline.**", "org.apache.solr.**"]
		# For Kite SDK
		importCommands: ["org.kitesdk.morphline.**", "com.ngdata.**"]
		# For CDK
		#importCommands: ["com.cloudera.cdk.morphline.**", "com.ngdata.**"]
		
		commands: [
		{
			extractHBaseCells {
				mappings: [

				{
					inputColumn: "tweet17:source"
					outputField: "raw_source_s"
					type: string
					source: value
				}
				# tweet : geo_1
				{
					inputColumn: "tweet17:geo_coordinates_1"
					outputField: "raw_geo_1_f"
					type: string
					source: value
				}
				# tweet : time
				#{
				#	inputColumn: "tweet17:time"
				#	outputField: "created_time_dt"
				#	type: string
				#	source: value
				#}
				# tweet : tweet_id
				{
					inputColumn: "tweet17:tweet_id"
					outputField: "raw_tweet_id_s"
					type: string
					source: value
				}
				# tweet : to_user_id
				{
					inputColumn: "tweet17:to_user_id"
					outputField: "raw_to_user_id_s"
					type: string
					source: value
				}
				# tweet : archivesource
				{
					inputColumn: "tweet17:archivesource"
					outputField: "archive_source_s"
					type: string
					source: value
				}
				# tweet : text
				{
					inputColumn: "tweet17:text"
					outputField: "raw_text_s"
					type: string
					source: value
				}
				# tweet : created_at
				#{
				#	inputColumn: "tweet17:created_at"
				#	outputField: "raw_created_at_s"
				#	type: string
				#	source: value
				#}
				# tweet : from_user
				{
					inputColumn: "tweet17:from_user"
					outputField: "author_s"
					type: string
					source: value
				}
				# tweet : language
				{
					inputColumn: "tweet17:iso_language_code"
					outputField: "raw_language_s"
					type: string
					source: value
				}
				# tweet : geo_0
				{
					inputColumn: "tweet17:geo_coordinates_0"
					outputField: "raw_geo_0_f"
					type: string
					source: value
				}
				# tweet : geo_type
				{
					inputColumn: "tweet17:geo_type"
					outputField: "raw_geo_type_s"
					type: string
					source: value
				}
				# tweet : profile_image_url
				{
					inputColumn: "tweet17:profile_image_url"
					outputField: "raw_profile_image_s"
					type: string
					source: value
				}
				# tweet : from_user_id
				{
					inputColumn: "tweet17:from_user_id"
					outputField: "raw_from_user_id_s"
					type: string
					source: value
				}
				#tweet : locations
				{
					inputColumn: "tweet17:location"
					outputField: "locations"
					type: string
                                        source: value
				}
				]
			}
		} 
		# End of extractHBaseCells		
		
		
		# This command deletes record fields that are unknown to Solr
		# schema.xml. Solr throws an exception on any attempt to load a
		# document that contains a field that is not specified in schema
		# convert timestamp field to native Solr timestamp format
		# such as 2012-09-06T07:14:34Z to 2012-09-06T07:14:34.000Z
		{
			convertTimestamp {
				field : created_time_dt
				inputFormats : ["unixTimeInSeconds"]
				inputTimezone : UTC
				outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
				outputTimezone : UTC
			}
		}
		{
			logTrace {
				format : "output record: {}", args : ["@{}"]
			}
		}
		]
	}
]
